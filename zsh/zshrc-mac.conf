# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# homebrew
# path=('/opt/homebrew/bin' $path)
# export PATH

# Path to your oh-my-zsh installation.
# IF have no such file or directory: ~/.oh-my-zsh/oh-my-zsh.sh  Use '/home/<username>/.oh-my-zsh' PATH
# export ZSH=/Home/<Username>/.oh-my-zsh 
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="simple"
ZSH_THEME="codespaces"
TERM=xterm-256color

# Solve Terminal error emoji <fe0f>
setopt COMBINING_CHARS

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

## ignore insecure dirctrories for omzsh root.
# ZSH_DISABLE_COMPFIX="true"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# plugins=(npm virtualenv)
plugins=(git
         vscode
         z
         encode64
         cp
         zsh-autosuggestions
         # asdf   #支持多种语言的版本管理工具
         # alias-finder
         aliases # Aliases cheatsheet. show all aliases by group
         sudo
         # command-not-found # 当你输入一条不存在的命令时，会自动查询这条命令可以如何获得。
         wd  # 常用文件夹记录和跳转
         zsh-syntax-highlighting
         # rand-quote   #随机提供一条 quote 命令
         extract  # 一键解压
         zsh-proxy
         gitignore
         safe-paste  # 当你往 zsh 粘贴脚本时，它不会被立刻运行。
         colored-man-pages  #带颜色的man 命令
         # zsh-vi-mode
         # history
         # screen  # GNU screen support
         git-open
         docker
         yarn
         # New Items
         brew
         node
         github
         web-search # This plugin adds aliases for searching with Google, Wiki, Bing, YouTube and other popular services.
         httpie
         # git-extras
         golang # Support glang aliases
         emoji # unicode emoji support 
    	 fzf
	 zsh-aliases-exa
    	 zsh-history-substring-search
    	 fzf-zsh-plugin
	 kubectl
	 rust
	 helm
 	 docker-compose
	 operator-sdk
	 kops
         )

## Z.lua
#eval "$(lua /usr/local/bin/z.lua --init zsh)"
#eval "$(lua /usr/local/bin/z.lua  --init zsh enhanced)"
#eval "$(lua /usr/local/bin/z.lua  --init zsh once enhanced)"

# zoxide
# eval "$(zoxide init zsh)"

# ZSH Completions
#path=(
#  /usr/local/share/zsh-completions
#  /usr/local/share/zsh/site-functions
#  $fpath
#)
#  fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src
#  fpath=(path/to/zsh-completions/src $fpath)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
# export EDITOR=vim
# export EDITOR=/usr/bin/vim
export EDITOR=/opt/homebrew/bin/nvim

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#  export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# rm trash     'brew install rmtrash' 
# alias rm='rmtrash'

# Alias 
# Recommand link: https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html

## ls Alias
#alias ll='ls -alF'
alias ll='ls -alh --color=auto'
#alias la='ls -A --color=auto'
alias ls='ls --color=auto'

## exa Alias
# general use
# alias ls='exa'                                                          # ls
alias l='exa -albGF --git'                                               
# alias l='exa -lbF --git'                                                # list, size, type, git
# alias ll='exa -lbGF --git'                                             # long list
# alias llm='exa -lbGd --git --sort=modified'                      # long list, modified date sort
#alias la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale'  # all list
# alias lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale' # all + extended list
 
# alias ls='exa -F'
# alias l="exa -l"
# alias la="exa -a"
# alias ll="exa -la"
# alias lt="ls -lhtrF"
# alias l.="ls -lhtrdF .*"
# alias lla='ls -la'
# alias tree="tree --dirsfirst"
alias fs="stat -f \"%z bytes\""

# specialty views
# alias lS='exa -1'                                                       # one column, just names
# alias lt='exa --tree --level=2'                                         # tree
# 

# which Alias have some errors
# alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'

alias df="df -h"
# alias rm='rm -i' # And have a rmtrash
alias cp='cp -iv'
alias mv='mv -iv'
alias mkdir='mkdir -pv'

alias vi='nvim'
alias vim='nvim'
#alias vi='sudo vi'

# SSH
alias ssh="ssh -X"
alias s="ssh -X"

# Python
alias py3="python3"
alias pip="pip3"

# Single Remove SIP 
alias xattrd='sudo xattr -r -d com.apple.quarantine'
alias xattrc='sudo xattr -rc '
#alias xattrc='sudo xattr -rc com.apple.quarantine'

alias codesignf='sudo codesign --force --deep - -sign -'


# tccutil reset ALL: reset software auth
alias tccutil='tccutil reset All'

## a quick way to get out of current directory ##
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
# alias .....='cd ../../../../'
# alias .4='cd ../../../../'
# alias .5='cd ../../../../..'

# alias cd.='cd ..'
# alias cd..='cd ../../'
# alias cd...='cd ../../..'

#Zellij
alias zj='Zellij'

# lazydocker
alias lzd='lazydocker'

# Broot
alias br='broot'

## Git Open
# alias git open='git-open'
alias gopen='git-open'

## z.lua alias
alias zc='z -c'      # 严格匹配当前路径的子路径
alias zz='z -i'      # 使用交互式选择模式
alias zf='z -I'      # 使用 fzf 对多个结果进行选择
alias zb='z -b'      # 快速回到父目录

alias zshrc='vi ~/.zshrc'
alias ezp='sh ./ezpush.sh'
alias df='df -h'
alias grep='grep --color=auto'
alias blog-ezp='sh ~/shell-scripts/monet_blog_push.sh'
alias mweb-ezp='sh ~/Documents/MWebLibrary/ezpush.sh'

## When Use KDE Craft
alias kde_craft='source ~/CraftRoot/craft/craftenv.sh'
# source ~/CraftRoot/craft/craftenv.sh

alias ssh-tcloud='ssh -i ~/.ssh/ssh_tencent_cloud root@$(head -n 1 ~/tencent_cloud_locate.txt)'

alias git_author_stats='git log --author="<your_email>" --pretty=tformat: --numstat | awk '\''{ add += $1 ; subs += $2 ; loc += $1 - $2 } END { printf "Added lines: %s, Removed lines: %s, Total lines: %s\n",add,subs,loc }'\'''

# Flush DNS
alias flush-dns='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder'

# Ranger
alias ra="ranger"

# fzf
eval "$(fzf --zsh)"

# Application alias
# alias marktext='open "/Applications/MarkText.app/Contents/MacOS/MarkText"'
#alias mt='open "/Applications/MarkText.app/Contents/MacOS/MarkText"'
alias mt='open -a MarkText'
alias chrome='open -a Google\ Chrome'
alias goland='open -a GoLand'
alias kate='open -a Kate'
alias typora='open -a Typora'
# alias zed='open -a Zed'
alias idea='open -a IntelliJ\ IDEA'

## TMPDIR
# export TMPDIR=~/tmpdir

# brew
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

# carbonyl
export PATH=/usr/local/carbonyl:$PATH

# asdf
. /opt/homebrew/opt/asdf/libexec/asdf.sh

## Starship
eval "$(starship init zsh)"

## Yarn PATH
# export PATH=$PATH:$(yarn global bin)

## Golang PATH
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export GO111MODULE=on 
export GOPROXY=https://goproxy.cn,direct

## Rust Path
export PATH=$PATH:$HOME/.cargo/bin

## This speeds up pasting w/ autosuggest
## https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

# export LANG=zh_CN.UTF-8

#### TIPS ####
#### Some Dirs #### 
#  /etc/environment
#  /opt  #the Paru Software bin install dir
#  /usr/bin
#  /usr/local  # Go install dir
#  /usr/local/bin  # HUGO & Caitou install dir
#  /opt/Homebrew
#  /opt/Homebrew/bin

## About sudo vi
# ln -s /usr/bin/vim /usr/bin/vi

## Solve sudo somethings NOT FOUND
## Uncomment secure PATH  ie. 

# Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/go/bin"

## For Mac
# Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/go/bin"

# broot
source /Users/monet/.config/broot/launcher/bash/br


# Functions

function tmp-upload() {
  local download_url=$(curl --upload-file ./$1 https://transfer.sh/$1)
  echo "curl -o $1 $download_url"
}

# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/Users/monet/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/Users/monet/miniconda3/etc/profile.d/conda.sh" ]; then
#         . "/Users/monet/miniconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="/Users/monet/miniconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<

export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"


# PostgreSQL
export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"

#export VOLTA_HOME="$HOME/.volta"
#export PATH="$VOLTA_HOME/bin:$PATH"

# pnpm
export PNPM_HOME="/Users/monet/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


#export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"

fpath+=/opt/homebrew/share/zsh/site-functions

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
